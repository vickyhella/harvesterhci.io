<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>The open source hyperconverged infrastructure (HCI) solution for a cloud native world Blog</title>
        <link>https://harvesterhci.io/kb</link>
        <description>The open source hyperconverged infrastructure (HCI) solution for a cloud native world Blog</description>
        <lastBuildDate>Tue, 25 Jul 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Configure PriorityClass on Longhorn System Components]]></title>
            <link>https://harvesterhci.io/kb/configure_priority_class_longhorn</link>
            <guid>configure_priority_class_longhorn</guid>
            <pubDate>Tue, 25 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Configure priority classes on Longhorn system components]]></description>
            <content:encoded><![CDATA[<p><strong>Harvester v1.2.0</strong>  introduces a new enhancement where Longhorn system-managed components in newly-deployed clusters are automatically assigned a <code>system-cluster-critical</code> priority class by default. However, when upgrading your Harvester clusters from previous versions, you may notice that Longhorn system-managed components do not have any priority class set.</p><p>This behavior is intentional and aimed at supporting zero-downtime upgrades. Longhorn does not allow changing the <code>priority-class</code> setting when attached volumes exist. For more details, please refer to <a href="https://longhorn.io/docs/1.4.3/advanced-resources/deploy/priority-class/#setting-priority-class-during-longhorn-installation" target="_blank" rel="noopener noreferrer">Setting Priority Class During Longhorn Installation</a>).</p><p>This article explains how to manually configure priority classes for Longhorn system-managed components after upgrading your Harvester cluster, ensuring that your Longhorn components have the appropriate priority class assigned and maintaining the stability and performance of your system.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="stop-all-virtual-machines">Stop all virtual machines<a class="hash-link" href="#stop-all-virtual-machines" title="Direct link to heading">​</a></h2><p>Stop all virtual machines (VMs) to detach all volumes. Please back up any work before doing this.</p><ol><li><p><a href="https://docs.harvesterhci.io/v1.1/troubleshooting/os#how-to-log-into-a-harvester-node" target="_blank" rel="noopener noreferrer">Login to a Harvester controller node and become root</a>.</p></li><li><p>Get all running VMs and write down their namespaces and names:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get vmi -A</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Alternatively, you can get this information by backing up the Virtual Machine Instance (VMI) manifests with the following command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get vmi -A -o json </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> vmi-backup.json</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Shut down all VMs. Log in to all running VMs and shut them down gracefully (recommended). Or use the following command to send shutdown signals to all VMs:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get vmi -A -o json </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> jq -r </span><span class="token string" style="color:#e3116c">'.items[] | [.metadata.name, .metadata.namespace] | @tsv'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">IFS</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">$'</span><span class="token string entity" style="color:#36acaa">\t</span><span class="token string" style="color:#e3116c">'</span><span class="token plain"> </span><span class="token builtin class-name">read</span><span class="token plain"> -r name namespace</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> -z </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$name</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Stop </span><span class="token string variable" style="color:#36acaa">${namespace}</span><span class="token string" style="color:#e3116c">/</span><span class="token string variable" style="color:#36acaa">${name}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      virtctl stop </span><span class="token variable" style="color:#36acaa">$name</span><span class="token plain"> -n </span><span class="token variable" style="color:#36acaa">$namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>  You can also stop all VMs from the Harvester UI:</p><ol><li>Go to the <strong>Virtual Machines</strong> page.</li><li>For each VM, select <strong>⋮</strong> &gt; <strong>Stop</strong>.</li></ol></div></div></li><li><p>Ensure there are no running VMs:</p><p>Run the command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get vmi -A</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>The above command must return:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">No resources found</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="scale-down-monitoring-pods">Scale down monitoring pods<a class="hash-link" href="#scale-down-monitoring-pods" title="Direct link to heading">​</a></h2><ol><li><p>Scale down the Prometheus deployment. Run the following command and wait for all Prometheus pods to terminate:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch -n cattle-monitoring-system prometheus/rancher-monitoring-prometheus --patch </span><span class="token string" style="color:#e3116c">'{"spec": {"replicas": 0}}'</span><span class="token plain"> --type merge </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n cattle-monitoring-system statefulset/prometheus-rancher-monitoring-prometheus</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">prometheus.monitoring.coreos.com/rancher-monitoring-prometheus patched</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">statefulset rolling update complete 0 pods at revision prometheus-rancher-monitoring-prometheus-cbf6bd5f7...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Scale down the AlertManager deployment. Run the following command and wait for all AlertManager pods to terminate:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch -n cattle-monitoring-system alertmanager/rancher-monitoring-alertmanager --patch </span><span class="token string" style="color:#e3116c">'{"spec": {"replicas": 0}}'</span><span class="token plain"> --type merge </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n cattle-monitoring-system statefulset/alertmanager-rancher-monitoring-alertmanager</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">alertmanager.monitoring.coreos.com/rancher-monitoring-alertmanager patched</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">statefulset rolling update complete 0 pods at revision alertmanager-rancher-monitoring-alertmanager-c8c459dff...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Scale down the Grafana deployment. Run the following command and wait for all Grafana pods to terminate:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl scale --replicas</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> deployment/rancher-monitoring-grafana -n cattle-monitoring-system </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n cattle-monitoring-system deployment/rancher-monitoring-grafana</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">deployment.apps/rancher-monitoring-grafana scaled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment "rancher-monitoring-grafana" successfully rolled out</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="scale-down-vm-import-controller-pods">Scale down vm-import-controller pods<a class="hash-link" href="#scale-down-vm-import-controller-pods" title="Direct link to heading">​</a></h2><ol><li><p>Check if the <a href="https://docs.harvesterhci.io/v1.1/advanced/vmimport" target="_blank" rel="noopener noreferrer"><code>vm-import-controller</code></a> addon is enabled and configured with a persistent volume with the following command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pvc -n harvester-system harvester-vm-import-controller</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>If the above command returns an output like this, you must scale down the <code>vm-import-controller</code> pod. Otherwise, you can skip the following step.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">NAME                             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS         AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">harvester-vm-import-controller   Bound    pvc-eb23e838-4c64-4650-bd8f-ba7075ab0559   200Gi      RWO            harvester-longhorn   2m53s</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Scale down the <code>vm-import-controller</code> pods with the following command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl scale --replicas</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> deployment/harvester-vm-import-controller -n harvester-system </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n harvester-system deployment/harvester-vm-import-controller</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">deployment.apps/harvester-vm-import-controller scaled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment "harvester-vm-import-controller" successfully rolled out</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="set-the-priority-class-setting">Set the <code>priority-class</code> setting<a class="hash-link" href="#set-the-priority-class-setting" title="Direct link to heading">​</a></h2><ol><li><p>Before applying the <code>priority-class</code> setting, you need to verify all volumes are detached. Run the following command to verify the <code>STATE</code> of each volume is <code>detached</code>:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get volumes.longhorn.io -A</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Verify the output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">NAMESPACE         NAME                                       STATE      ROBUSTNESS   SCHEDULED   SIZE           NODE   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">longhorn-system   pvc-5743fd02-17a3-4403-b0d3-0e9b401cceed   detached   unknown                  5368709120            15d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">longhorn-system   pvc-7e389fe8-984c-4049-9ba8-5b797cb17278   detached   unknown                  53687091200           15d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">longhorn-system   pvc-8df64e54-ecdb-4d4e-8bab-28d81e316b8b   detached   unknown                  2147483648            15d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">longhorn-system   pvc-eb23e838-4c64-4650-bd8f-ba7075ab0559   detached   unknown                  214748364800          11m</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Set the <code>priority-class</code> setting with the following command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch -n longhorn-system settings.longhorn.io priority-class --patch </span><span class="token string" style="color:#e3116c">'{"value": "system-cluster-critical"}'</span><span class="token plain"> --type merge</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Longhorn system-managed pods will restart and then you need to check if all the system-managed components have a priority class set:</p><p>Get the value of the priority class <code>system-cluster-critical</code>:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get priorityclass system-cluster-critical</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Verify the output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">NAME                      VALUE        GLOBAL-DEFAULT   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">system-cluster-critical   2000000000   false            15d</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Use the following command to get pods' priority in the <code>longhorn-system</code> namespace:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods -n longhorn-system -o custom-columns</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"Name"</span><span class="token plain">:metadata.name,</span><span class="token string" style="color:#e3116c">"Priority"</span><span class="token plain">:.spec.priority</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Verify all system-managed components' pods have the correct priority. System-managed components include:</p><ul><li><code>csi-attacher</code></li><li><code>csi-provisioner</code></li><li><code>csi-resizer</code></li><li><code>csi-snapshotter</code></li><li><code>engine-image-ei</code></li><li><code>instance-manager-e</code></li><li><code>instance-manager-r</code></li><li><code>longhorn-csi-plugin</code></li></ul></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="scale-up-vm-import-controller-pods">Scale up vm-import-controller pods<a class="hash-link" href="#scale-up-vm-import-controller-pods" title="Direct link to heading">​</a></h2><p>If you scale down the <code>vm-import-controller</code> pods, you must scale it up again. </p><ol><li><p>Scale up the <code>vm-import-controller</code> pod. Run the command: </p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl scale --replicas</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> deployment/harvester-vm-import-controller -n harvester-system </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n harvester-system deployment/harvester-vm-import-controller</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">deployment.apps/harvester-vm-import-controller scaled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Waiting for deployment "harvester-vm-import-controller" rollout to finish: 0 of 1 updated replicas are available...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment "harvester-vm-import-controller" successfully rolled out</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Verify <code>vm-import-controller</code> is running using the following command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods --selector app.kubernetes.io/instance</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">vm-import-controller -A</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this, the pod's <code>STATUS</code> must be <code>Running</code>:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">NAMESPACE          NAME                                              READY   STATUS    RESTARTS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">harvester-system   harvester-vm-import-controller-6bd8f44f55-m9k86   1/1     Running   0          4m53s</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="scale-up-monitoring-pods">Scale up monitoring pods<a class="hash-link" href="#scale-up-monitoring-pods" title="Direct link to heading">​</a></h2><ol><li><p>Scale up the Prometheus deployment. Run the following command and wait for all Prometheus pods to roll out:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch -n cattle-monitoring-system prometheus/rancher-monitoring-prometheus --patch </span><span class="token string" style="color:#e3116c">'{"spec": {"replicas": 1}}'</span><span class="token plain"> --type merge </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n cattle-monitoring-system statefulset/prometheus-rancher-monitoring-prometheus</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">prometheus.monitoring.coreos.com/rancher-monitoring-prometheus patched</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Waiting for 1 pods to be ready...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">statefulset rolling update complete 1 pods at revision prometheus-rancher-monitoring-prometheus-cbf6bd5f7...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Scale down the AlertManager deployment. Run the following command and wait for all AlertManager pods to roll out:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch -n cattle-monitoring-system alertmanager/rancher-monitoring-alertmanager --patch </span><span class="token string" style="color:#e3116c">'{"spec": {"replicas": 1}}'</span><span class="token plain"> --type merge </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n cattle-monitoring-system statefulset/alertmanager-rancher-monitoring-alertmanager</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">alertmanager.monitoring.coreos.com/rancher-monitoring-alertmanager patched</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Waiting for 1 pods to be ready...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">statefulset rolling update complete 1 pods at revision alertmanager-rancher-monitoring-alertmanager-c8bd4466c...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Scale down the Grafana deployment. Run the following command and wait for all Grafana pods to roll out:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl scale --replicas</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> deployment/rancher-monitoring-grafana -n cattle-monitoring-system </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubectl rollout status --watch</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true -n cattle-monitoring-system deployment/rancher-monitoring-grafana</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>A sample output looks like this:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">deployment.apps/rancher-monitoring-grafana scaled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Waiting for deployment "rancher-monitoring-grafana" rollout to finish: 0 of 1 updated replicas are available...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment "rancher-monitoring-grafana" successfully rolled out</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="start-virtual-machines">Start virtual machines<a class="hash-link" href="#start-virtual-machines" title="Direct link to heading">​</a></h2><ol><li><p>Start a VM with the command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">virtctl start </span><span class="token variable" style="color:#36acaa">$name</span><span class="token plain"> -n </span><span class="token variable" style="color:#36acaa">$namespace</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Replace <code>$name</code> with the VM's name and <code>$namespace</code> with the VM's namespace. You can list all virtual machines with the command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get vms -A</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p> You can also stop all VMs from the Harvester UI:</p><ol><li>Go to the <strong>Virtual Machines</strong> page.</li><li>For each VM, select <strong>⋮</strong> &gt; <strong>Start</strong>.</li></ol></div></div><p>Alternatively, you can start all running VMs with the following command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> vmi-backup.json </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> jq -r </span><span class="token string" style="color:#e3116c">'.items[] | [.metadata.name, .metadata.namespace] | @tsv'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">IFS</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">$'</span><span class="token string entity" style="color:#36acaa">\t</span><span class="token string" style="color:#e3116c">'</span><span class="token plain"> </span><span class="token builtin class-name">read</span><span class="token plain"> -r name namespace</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> -z </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$name</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Start </span><span class="token string variable" style="color:#36acaa">${namespace}</span><span class="token string" style="color:#e3116c">/</span><span class="token string variable" style="color:#36acaa">${name}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      virtctl start </span><span class="token variable" style="color:#36acaa">$name</span><span class="token plain"> -n </span><span class="token variable" style="color:#36acaa">$namespace</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol>]]></content:encoded>
            <category>harvester</category>
            <category>longhorn</category>
            <category>priority class</category>
        </item>
        <item>
            <title><![CDATA[Package your own Toolbox Image]]></title>
            <link>https://harvesterhci.io/kb/package_your_own_toolbox_image</link>
            <guid>package_your_own_toolbox_image</guid>
            <pubDate>Thu, 06 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[How to package your own toolbox image]]></description>
            <content:encoded><![CDATA[<p>Harvester OS is designed as an immutable operating system, which means you cannot directly install additional packages on it. While there is a way to <a href="https://docs.harvesterhci.io/dev/troubleshooting/os#how-can-i-install-packages-why-are-some-paths-read-only" target="_blank" rel="noopener noreferrer">install packages</a>, it is strongly advised against doing so, as it may lead to system instability.</p><p>If you only want to debug with the system, the preferred way is to package the toolbox image with all the needed packages. </p><p>This article shares how to package your toolbox image and how to install any packages on the toolbox image that help you debug the system.</p><p>For example, if you want to analyze a storage performance issue, you can install <code>blktrace</code> on the toolbox image.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="create-a-dockerfile">Create a Dockerfile<a class="hash-link" href="#create-a-dockerfile" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">FROM opensuse/leap:15.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Install blktrace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN </span><span class="token function" style="color:#d73a49">zypper</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> -y </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    blktrace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN </span><span class="token function" style="color:#d73a49">zypper</span><span class="token plain"> clean --all</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="build-the-image-and-push">Build the image and push<a class="hash-link" href="#build-the-image-and-push" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># assume you are in the directory of Dockerfile</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> build -t harvester/toolbox:dev </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">naming to docker.io/harvester/toolbox:dev </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> push harvester/toolbox:dev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">d4b76d0683d4: Pushed </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a605baa225e2: Pushed </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">9e9058bdf63c: Layer already exists </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>After you build and push the image, you can run the toolbox using this image to trace storage performance.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="run-the-toolbox">Run the toolbox<a class="hash-link" href="#run-the-toolbox" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># use `privileged` flag only when you needed. blktrace need debugfs, so I add extra mountpoint.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> run -it --privileged -v /sys/kernel/debug/:/sys/kernel/debug/ --rm harvester/toolbox:dev </span><span class="token function" style="color:#d73a49">bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># test blktrace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6ffa8eda3aaf:/ $ blktrace -d /dev/nvme0n1 -o - </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> blkparse -i -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3414</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020814875</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  Q  WS </span><span class="token number" style="color:#36acaa">2414127984</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fio</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3415</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020815190</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  G  WS </span><span class="token number" style="color:#36acaa">2414127984</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fio</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3416</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020815989</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  C  WS </span><span class="token number" style="color:#36acaa">3206896544</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3417</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020816652</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  C  WS </span><span class="token number" style="color:#36acaa">2140319184</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3418</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020817992</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  P   N </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fio</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3419</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020818227</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  U   N </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fio</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3420</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020818437</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  D  WS </span><span class="token number" style="color:#36acaa">2414127984</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fio</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3421</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020821826</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  Q  WS </span><span class="token number" style="color:#36acaa">1743934904</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fio</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">259,0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">3422</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">0.020822150</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">34084</span><span class="token plain">  G  WS </span><span class="token number" style="color:#36acaa">1743934904</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fio</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>]]></content:encoded>
            <category>debug</category>
            <category>harvester</category>
            <category>container</category>
        </item>
        <item>
            <title><![CDATA[Scan and Repair Root Filesystem of VirtualMachine]]></title>
            <link>https://harvesterhci.io/kb/scan-and-repair-vm-root-filesystem</link>
            <guid>scan-and-repair-vm-root-filesystem</guid>
            <pubDate>Wed, 01 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Scan and repair root filesystem of VM]]></description>
            <content:encoded><![CDATA[<p>In earlier versions of Harvester (v1.0.3 and prior), Longhorn volumes may get corrupted during the replica rebuilding process (reference: <a href="https://longhorn.io/kb/troubleshooting-volume-filesystem-corruption/#solution" target="_blank" rel="noopener noreferrer">Analysis: Potential Data/Filesystem Corruption</a>). In Harvester v1.1.0 and later versions, the Longhorn team has fixed this issue. This article covers manual steps you can take to scan the VM's filesystem and repair it if needed.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="stop-the-vm-and-backup-volume">Stop The VM And Backup Volume<a class="hash-link" href="#stop-the-vm-and-backup-volume" title="Direct link to heading">​</a></h2><p>Before you scan the filesystem, it is recommend you back up the volume first. For an example, refer to the following steps to stop the VM and backup the volume.</p><ul><li>Find the target VM.</li></ul><p><img loading="lazy" alt="finding the target VM" src="/assets/images/finding_the_target_vm-c3f5c227fdeda94499a32e880a302e80.png" width="2560" height="880"></p><ul><li>Stop the target VM.</li></ul><p><img loading="lazy" alt="Stop the target VM" src="/assets/images/stop_the_target_vm-35b68914885fd42f4b7310aa849f944f.png" width="2546" height="856"></p><p>The target VM is stopped and the related volumes are detached. Now go to the Longhorn UI to backup this volume.</p><ul><li>Enable <code>Developer Tools &amp; Features</code> (Preferences -&gt; Enable Developer Tools &amp; Features).</li></ul><p><img loading="lazy" alt="Preferences then enable developer mode" src="/assets/images/preferences_enable_developer_mode-1379680f02f9980091177736ed7ce523.png" width="2570" height="1090">
<img loading="lazy" alt="Enable the developer mode" src="/assets/images/enable_the_developer_mode-8dffb1796b8e5da9863d6c69ad7f0209.png" width="2760" height="350"></p><ul><li>Click the <code>⋮</code> button and select <strong>Edit Config</strong> to edit the config page of the VM.</li></ul><p><img loading="lazy" alt="goto edit config page of VM" src="/assets/images/goto_vm_edit_config_page-52e958d3a5e04c912e77615d3ab05616.png" width="2526" height="964"></p><ul><li>Go to the <code>Volumes</code> tab and select <code>Check volume details.</code></li></ul><p><img loading="lazy" alt="link to longhorn volume page" src="/assets/images/link_to_longhorn_volume-ced67ce270fd55fa7ff5a73c651ae940.png" width="2522" height="1372"></p><ul><li>Click the dropdown menu on the right side and select 'Attach' to attach the volume again. </li></ul><p><img loading="lazy" alt="attach this volume again" src="/assets/images/attach_this_volume_again-f008c1d56b9cdfa2b141e30093cc51fe.png" width="2972" height="1358"></p><ul><li>Select the attached node. </li></ul><p><img loading="lazy" alt="choose the attached node" src="/assets/images/choose_the_attached_node-cde38647a09abf50189b40f5a37da9cb.png" width="2964" height="1362"></p><ul><li>Check the volume attached under <code>Volume Details</code> and select <code>Take Snapshot</code> on this volume page.</li></ul><p><img loading="lazy" alt="take snapshot on volume page" src="/assets/images/take_snapshot_on_volume_page-fe966d238b47aea3360b6f5c55664846.png" width="2976" height="1358"></p><ul><li>Confirm that the snapshot is ready.</li></ul><p><img loading="lazy" alt="check the snapshot is ready" src="/assets/images/check_the_snapshot_is_ready-7f0716b1b699c668c11ad5b5b46596b0.png" width="2968" height="1356"></p><p>Now that you completed the volume backup, you need to scan and repair the root filesystem.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="scanning-the-root-filesystem-and-repairing">Scanning the root filesystem and repairing<a class="hash-link" href="#scanning-the-root-filesystem-and-repairing" title="Direct link to heading">​</a></h2><p>This section will introduce how to scan the filesystem (e.g., XFS, EXT4) using related tools.</p><p>Before scanning, you need to know the filesystem's device/partition.</p><ul><li>Find the filesystem's device by running the <code>dmesg</code> command. The most recent device should be what we wanted because we attach the latest.</li><li>You should now know the filesystem's partition. In the example below, sdd3 is the filesystem's partition.</li></ul><p><img loading="lazy" alt="finding the related device" src="/assets/images/finding_related_device-65244c8157777d7503b6262c4522c202.png" width="3010" height="550"></p><ul><li>Use the Filesystem toolbox image to scan and repair.</li></ul><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># docker run -it --rm --privileged registry.opensuse.org/isv/rancher/harvester/toolbox/main/fs-toolbox:latest -- bash</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Then we try to scan with this target device.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="xfs">XFS<a class="hash-link" href="#xfs" title="Direct link to heading">​</a></h3><p>When scanning a XFS filesystem, use the <code>xfs_repair</code> command as follows, where <code>/dev/sdd3</code> is the problematic partition of the device.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># xfs_repair -n /dev/sdd3</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>To repair the corrupted partition, run the following command.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># xfs_repair /dev/sdd3</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="ext4">EXT4<a class="hash-link" href="#ext4" title="Direct link to heading">​</a></h3><p>When scanning a EXT4 filesystem, use the <code>e2fsck</code> command as follows, where the <code>/dev/sde1</code> is the problematic partition of the device.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># e2fsck -f /dev/sde1</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>To repair the corrupted partition, run the following command.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># e2fsck -fp /dev/sde1</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>After using the 'e2fsck' command, you should also see logs related to scanning and repairing the partition. Scanning and repairing the corrupted partition is successful if there are no errors in these logs. </p><h2 class="anchor anchorWithStickyNavbar_mojV" id="detach-and-start-vm-again">Detach and Start VM again.<a class="hash-link" href="#detach-and-start-vm-again" title="Direct link to heading">​</a></h2><p>After the corrupted partition is scanned and repaired, detach the volume and try to start the related VM again.</p><ul><li>Detach the volume from the Longhorn UI.</li></ul><p><img loading="lazy" alt="detach volume on longhorn UI" src="/assets/images/detach_volume-a71a0c79f0a6052fd5ecb562bf532b71.png" width="2964" height="1364"></p><ul><li>Start the related VM again from the Longhorn UI.</li></ul><p><img loading="lazy" alt="Start VM again" src="/assets/images/start_vm_again-6ce38c23de061f1587da9e4f8698b7e8.png" width="2540" height="854"></p><p>Your VM should now work normally.</p>]]></content:encoded>
            <category>storage</category>
            <category>longhorn</category>
            <category>root</category>
            <category>filesystem</category>
        </item>
        <item>
            <title><![CDATA[Evicting Replicas From a Disk (the CLI way)]]></title>
            <link>https://harvesterhci.io/kb/evicting-replicas-from-a-disk-the-cli-way</link>
            <guid>evicting-replicas-from-a-disk-the-cli-way</guid>
            <pubDate>Thu, 12 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Evicting replicas from a disk (the CLI way)]]></description>
            <content:encoded><![CDATA[<p>Harvester replicates volumes data across disks in a cluster. Before removing a disk, the user needs to evict replicas on the disk to other disks to preserve the volumes' configured availability. For more information about eviction in Longhorn, please check <a href="https://longhorn.io/docs/1.3.2/volumes-and-nodes/disks-or-nodes-eviction/" target="_blank" rel="noopener noreferrer">Evicting Replicas on Disabled Disks or Nodes</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="preparation">Preparation<a class="hash-link" href="#preparation" title="Direct link to heading">​</a></h2><p>This document describes how to evict Longhorn disks using the <code>kubectl</code> command. Before that, users must ensure the environment is set up correctly.
There are two recommended ways to do this:</p><ol><li>Log in to any management node and switch to root (<code>sudo -i</code>).</li><li>Download Kubeconfig file and use it locally<ul><li>Install <code>kubectl</code> and <code>yq</code> program manually.</li><li>Open Harvester GUI,  click <code>support</code> at the bottom left of the page and click <code>Download KubeConfig</code> to download the Kubeconfig file.</li><li>Set the Kubeconfig file's path to <code>KUBECONFIG</code> environment variable. For example, <code>export KUBECONFIG=/path/to/kubeconfig</code>.</li></ul></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="evicting-replicas-from-a-disk">Evicting replicas from a disk<a class="hash-link" href="#evicting-replicas-from-a-disk" title="Direct link to heading">​</a></h2><ol><li><p>List Longhorn nodes (names are identical to Kubernetes nodes):</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get -n longhorn-system nodes.longhorn.io</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Sample output:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">NAME    READY   ALLOWSCHEDULING   SCHEDULABLE   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node1   True    true              True          24d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node2   True    true              True          24d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node3   True    true              True          24d</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>List disks on a node. Assume we want to evict replicas of a disk on <code>node1</code>:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get -n longhorn-system nodes.longhorn.io node1 -o yaml | yq e '.spec.disks'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Sample output:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">default-disk-ed7af10f5b8356be:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  allowScheduling: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  evictionRequested: false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  path: /var/lib/harvester/defaultdisk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  storageReserved: 36900254515</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tags: []</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Assume disk <code>default-disk-ed7af10f5b8356be</code> is the target we want to evict replicas out of.</p><p>Edit the node:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl edit -n longhorn-system nodes.longhorn.io node1 </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Update these two fields and save:</p><ul><li><code>spec.disks.&lt;disk_name&gt;.allowScheduling</code> to <code>false</code></li><li><code>spec.disks.&lt;disk_name&gt;.evictionRequested</code> to <code>true</code></li></ul><p>Sample editing:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">default-disk-ed7af10f5b8356be:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  allowScheduling: false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  evictionRequested: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  path: /var/lib/harvester/defaultdisk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  storageReserved: 36900254515</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tags: []</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Wait for all replicas on the disk to be evicted.</p><p>Get current scheduled replicas on the disk:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get -n longhorn-system nodes.longhorn.io node1 -o yaml | yq e '.status.diskStatus.default-disk-ed7af10f5b8356be.scheduledReplica'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Sample output:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">pvc-86d3d212-d674-4c64-b69b-4a2eb1df2272-r-7b422db7: 5368709120</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pvc-b06f0b09-f30c-4936-8a2a-425b993dd6cb-r-bb0fa6b3: 2147483648</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pvc-b844bcc6-3b06-4367-a136-3909251cb560-r-08d1ab3c: 53687091200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pvc-ea6e0dff-f446-4a38-916a-b3bea522f51c-r-193ca5c6: 10737418240</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Run the command repeatedly, and the output should eventually become an empty map:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">{}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>This means Longhorn evicts replicas on the disk to other disks.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>If a replica always stays in a disk, please open the <a href="https://docs.harvesterhci.io/v1.1/troubleshooting/harvester#access-embedded-rancher-and-longhorn-dashboards" target="_blank" rel="noopener noreferrer">Longhorn GUI</a> and check if there is free space on other disks.</p></div></div></li></ol>]]></content:encoded>
            <category>storage</category>
            <category>longhorn</category>
            <category>disk</category>
        </item>
        <item>
            <title><![CDATA[NIC Naming Scheme]]></title>
            <link>https://harvesterhci.io/kb/nic-naming-scheme</link>
            <guid>nic-naming-scheme</guid>
            <pubDate>Wed, 06 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[NIC Naming Scheme changed after upgrading to v1.0.1]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="nic-naming-scheme-changed-after-upgrading-to-v101">NIC Naming Scheme changed after upgrading to v1.0.1<a class="hash-link" href="#nic-naming-scheme-changed-after-upgrading-to-v101" title="Direct link to heading">​</a></h2><p><code>systemd</code> in OpenSUSE Leap 15.3 which is the base OS of Harvester is upgraded to <code>246.16-150300.7.39.1</code>. In this version, <code>systemd</code> will enable additional naming scheme <code>sle15-sp3</code> which is <code>v238</code> with <code>bridge_no_slot</code>. When there is a PCI bridge associated with NIC, <code>systemd</code> will never generate <code>ID_NET_NAME_SLOT</code> and naming policy in <code>/usr/lib/systemd/network/99-default.link</code> will fallback to <code>ID_NET_NAME_PATH</code>. According to this change, NIC names might be changed in your Harvester nodes during the upgrade process from <code>v1.0.0</code> to <code>v1.0.1-rc1</code> or above, and it will cause network issues that are associated with NIC names.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="effect-settings-and-workaround">Effect Settings and Workaround<a class="hash-link" href="#effect-settings-and-workaround" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="startup-network-configuration">Startup Network Configuration<a class="hash-link" href="#startup-network-configuration" title="Direct link to heading">​</a></h3><p>NIC name changes will need to update the name in <code>/oem/99_custom.yaml</code>. You could use <a href="https://github.com/harvester/upgrade-helpers/blob/main/hack/udev_v238_sle15-sp3.py" target="_blank" rel="noopener noreferrer">migration script</a> to change the NIC names which are associated with a PCI bridge.</p><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</h5></div><div class="admonition-content"><p>You could find an identical machine to test naming changes before applying the configuration to production machines</p></div></div><p>You could simply execute the script with root account in <code>v1.0.0</code> via</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># python3 udev_v238_sle15-sp3.py</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>It will output the patched configuration to the screen and you could compare it to the original one to ensure there is no exception. (e.g. We could use <code>vimdiff</code> to check the configuration)</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># python3 udev_v238_sle15-spe3.py &gt; /oem/test</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># vimdiff /oem/test /oem/99_custom.yaml</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>After checking the result, we could execute the script with <code>--really-want-to-do</code> to override the configuration. It will also back up the original configuration file with a timestamp before patching it.</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># python3 udev_v238_sle15-sp3.py --really-want-to-do</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="harvester-vlan-network-configuration">Harvester VLAN Network Configuration<a class="hash-link" href="#harvester-vlan-network-configuration" title="Direct link to heading">​</a></h3><p>If your VLAN network is associated with NIC name directly without <code>bonding</code>, you will need to migrate <code>ClusterNetwork</code> and <code>NodeNetwork</code> with the previous section together.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>If your VLAN network is associated with the <code>bonding</code> name in <code>/oem/99_custom.yaml</code>, you could skip this section.</p></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="modify-clusternetworks">Modify ClusterNetworks<a class="hash-link" href="#modify-clusternetworks" title="Direct link to heading">​</a></h4><p>You need to modify <code>ClusterNetworks</code> via </p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl edit clusternetworks vlan</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>search this pattern</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">defaultPhysicalNIC</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;Your NIC name</span><span class="token punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>and change to new NIC name</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="modify-nodenetworks">Modify NodeNetworks<a class="hash-link" href="#modify-nodenetworks" title="Direct link to heading">​</a></h4><p>You need to modify <code>NodeNetworks</code> via</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl edit nodenetworks </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Node name</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">-vlan</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>search this pattern</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">nic</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;Your NIC name</span><span class="token punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>and change to new NIC name</p>]]></content:encoded>
            <category>network</category>
        </item>
        <item>
            <title><![CDATA[Multiple NICs VM Connectivity]]></title>
            <link>https://harvesterhci.io/kb/multiple-nics-vm-connectivity</link>
            <guid>multiple-nics-vm-connectivity</guid>
            <pubDate>Thu, 10 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[What is the default behavior of a VM with multiple NICs]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="what-is-the-default-behavior-of-a-vm-with-multiple-nics">What is the default behavior of a VM with multiple NICs<a class="hash-link" href="#what-is-the-default-behavior-of-a-vm-with-multiple-nics" title="Direct link to heading">​</a></h2><p>In <a href="https://github.com/harvester/harvester/issues/1059" target="_blank" rel="noopener noreferrer">some scenarios</a>, you'll setup two or more NICs in your VM to serve different networking purposes. If all networks are setup by default with DHCP, you might get random connectivity issues. And while it might get fixed after rebooting the VM, it still will lose connection randomly after some period.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-to-identify-connectivity-issues">How-to identify connectivity issues<a class="hash-link" href="#how-to-identify-connectivity-issues" title="Direct link to heading">​</a></h2><p>In a Linux VM, you can use commands from the <code>iproute2</code> package to identify the default route.</p><p>In your VM, execute the following command:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> route show default</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</h5></div><div class="admonition-content"><p>If you get the <code>access denied</code> error, please run the command using <code>sudo</code></p></div></div><p>The output of this command will only show the default route with the gateway and VM IP of the primary network interface (<code>eth0</code> in the example below).</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">default via &lt;Gateway IP&gt; dev eth0 proto dhcp src &lt;VM IP&gt; metric 100</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Here is the full example:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ ip route show default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default via 192.168.0.254 dev eth0 proto dhcp src 192.168.0.100 metric 100</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>However, if the issue covered in this KB occurs, you'll only be able to connect to the VM via the VNC or serial console.</p><p>Once connected, you can run again the same command as before:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> route show default</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>However, this time you'll get a default route with an incorrect gateway IP.
For example:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">default via &lt;Incorrect Gateway IP&gt; dev eth0 proto dhcp src &lt;VM's IP&gt; metric 100</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="why-do-connectivity-issues-occur-randomly">Why do connectivity issues occur randomly<a class="hash-link" href="#why-do-connectivity-issues-occur-randomly" title="Direct link to heading">​</a></h2><p>In a standard setup, cloud-based VMs typically use DHCP for their NICs configuration. It will set an IP and a gateway for each NIC. Lastly, a default route to the gateway IP will also be added, so you can use its IP to connect to the VM.</p><p>However, Linux distributions start multiple DHCP clients at the same time and do not have a <strong>priority</strong> system. This means that if you have two or more NICs configured with DHCP, the client will enter a <strong>race condition</strong> to configure the default route. And depending on the currently running Linux distribution DHCP script, there is no guarantee which default route will be configured.</p><p>As the default route might change in every DHCP renewing process or after every OS reboot, this will create network connectivity issues.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-to-avoid-the-random-connectivity-issues">How to avoid the random connectivity issues<a class="hash-link" href="#how-to-avoid-the-random-connectivity-issues" title="Direct link to heading">​</a></h2><p>You can easily avoid these connectivity issues by having only one NIC attached to the VM and having only one IP and one gateway configured.</p><p>However, for VMs in more complex infrastructures, it is often not possible to use just one NIC. For example, if your infrastructure has a storage network and a service network. For security reasons, the storage network will be isolated from the service network and have a separate subnet. In this case, you must have two NICs to connect to both the service and storage networks.</p><p>You can choose a solution below that meets your requirements and security policy.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="disable-dhcp-on-secondary-nic">Disable DHCP on secondary NIC<a class="hash-link" href="#disable-dhcp-on-secondary-nic" title="Direct link to heading">​</a></h3><p>As mentioned above, the problem is caused by a <code>race condition</code> between two DHCP clients. One solution to avoid this problem is to disable DHCP for all NICs and configure them with static IPs only. Likewise, you can configure the secondary NIC with a static IP and keep the primary NIC enabled with DHCP.</p><ol><li>To configure the primary NIC with a static IP (<code>eth0</code> in this example), you can edit the file <code>/etc/sysconfig/network/ifcfg-eth0</code> with the following values:</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">BOOTPROTO='static'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IPADDR='192.168.0.100'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NETMASK='255.255.255.0'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Alternatively, if you want to reserve the primary NIC using DHCP (<code>eth0</code> in this example), use the following values instead:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">BOOTPROTO='dhcp'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DHCLIENT_SET_DEFAULT_ROUTE='yes'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="2"><li>You need to configure the default route by editing the file <code>/etc/sysconfig/network/ifroute-eth0</code> (if you configured the primary NIC using DHCP, skip this step):</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># Destination  Dummy/Gateway  Netmask  Interface</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default        192.168.0.254  -        eth0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>warning</h5></div><div class="admonition-content"><p>Do not put other default route for your secondary NIC</p></div></div><ol start="3"><li>Finally, configure a static IP for the secondary NIC by editing the file <code>/etc/sysconfig/network/ifcfg-eth1</code>:</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">BOOTPROTO='static'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IPADDR='10.0.0.100'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NETMASK='255.255.255.0'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="cloud-init-config">Cloud-Init config<a class="hash-link" href="#cloud-init-config" title="Direct link to heading">​</a></h4><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">network</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> physical</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">subnets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> dhcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> physical</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> eth1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">subnets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> static</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">address</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 10.0.0.100/24</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="disable-secondary-nic-default-route-from-dhcp">Disable secondary NIC default route from DHCP<a class="hash-link" href="#disable-secondary-nic-default-route-from-dhcp" title="Direct link to heading">​</a></h3><p>If your secondary NIC requires to get its IP from DHCP, you'll need to disable the secondary NIC default route configuration.</p><ol><li>Confirm that the primary NIC configures its default route in the file <code>/etc/sysconfig/network/ifcfg-eth0</code>:</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">BOOTPROTO='dhcp'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DHCLIENT_SET_DEFAULT_ROUTE='yes'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="2"><li>Disable the secondary NIC default route configuration by editing the file <code>/etc/sysconfig/network/ifcfg-eth1</code>:</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">BOOTPROTO='dhcp'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DHCLIENT_SET_DEFAULT_ROUTE='no'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="cloud-init-config-1">Cloud-Init config<a class="hash-link" href="#cloud-init-config-1" title="Direct link to heading">​</a></h4><p>This solution is not available in Cloud-Init. Cloud-Init didn't allow any option for DHCP.</p>]]></content:encoded>
            <category>vm</category>
            <category>network</category>
        </item>
        <item>
            <title><![CDATA[VM Scheduling]]></title>
            <link>https://harvesterhci.io/kb/vm-scheduling</link>
            <guid>vm-scheduling</guid>
            <pubDate>Mon, 07 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[How does Harvester schedule VMs?]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="how-does-harvester-schedule-a-vm">How does Harvester schedule a VM?<a class="hash-link" href="#how-does-harvester-schedule-a-vm" title="Direct link to heading">​</a></h2><p>Harvester doesn't directly schedule a VM in Kubernetes, it relies on <a href="http://kubevirt.io/" target="_blank" rel="noopener noreferrer">KubeVirt</a> to create the custom resource <code>VirtualMachine</code>. When the request to create a new VM is sent, a <code>VirtualMachineInstance</code> object is created and it creates the corresponding <code>Pod</code>.</p><p>The whole VM creation processt leverages <code>kube-scheduler</code>, which allows Harvester to use <code>nodeSelector</code>, <code>affinity</code>, and resources request/limitation to influence where a VM will be deployed.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-does-kube-scheduler-decide-where-to-deploy-a-vm">How does kube-scheduler decide where to deploy a VM?<a class="hash-link" href="#how-does-kube-scheduler-decide-where-to-deploy-a-vm" title="Direct link to heading">​</a></h2><p>First, <code>kube-scheduler</code> finds Nodes available to run a pod. After that, <code>kube-scheduler</code> scores each available Node by a list of <a href="https://github.com/kubernetes/kubernetes/tree/v1.22.7/pkg/scheduler/framework/plugins" target="_blank" rel="noopener noreferrer">plugins</a> like <a href="https://github.com/kubernetes/kubernetes/blob/v1.22.7/pkg/scheduler/framework/plugins/imagelocality/image_locality.go" target="_blank" rel="noopener noreferrer">ImageLocality</a>, <a href="https://github.com/kubernetes/kubernetes/tree/v1.22.7/pkg/scheduler/framework/plugins/interpodaffinity" target="_blank" rel="noopener noreferrer">InterPodAffinity</a>, <a href="https://github.com/kubernetes/kubernetes/tree/v1.22.7/pkg/scheduler/framework/plugins/nodeaffinity" target="_blank" rel="noopener noreferrer">NodeAffinity</a>, etc. </p><p>Finally, <code>kube-scheduler</code> calculates the scores from the plugins results for each Node, and select the Node with the highest score to deploy the Pod.</p><p>For example, let's say  we have a three nodes Harvester cluster with 6 cores CPU and 16G RAM each, and we want to deploy a VM with 1 CPU and 1G RAM (without resources overcommit). </p><p><code>kube-scheduler</code> will summarize the scores, as displayed in  <em>Table 1</em> below, and will select the node with the highest score, <code>harvester-node-2</code> in this case, to deploy the VM.</p><details class="details_lb9f alert alert--info details_BAp3" data-collapsed="true"><summary>kube-scheduler logs</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm-without-overcommit-75q9b -&gt; harvester-node-0: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9960 memory:15166603264] ,score 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm-without-overcommit-75q9b -&gt; harvester-node-1: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5560 memory:6352273408] ,score 45,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm-without-overcommit-75q9b -&gt; harvester-node-2: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5350 memory:5941231616] ,score 46,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm-without-overcommit-75q9b -&gt; harvester-node-0: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9960 memory:15166603264] ,score 4,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm-without-overcommit-75q9b -&gt; harvester-node-1: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5560 memory:6352273408] ,score 34,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm-without-overcommit-75q9b -&gt; harvester-node-2: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5350 memory:5941231616] ,score 37,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="ImageLocality" node="harvester-node-0" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="ImageLocality" node="harvester-node-1" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="ImageLocality" node="harvester-node-2" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="InterPodAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="InterPodAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="InterPodAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeResourcesLeastAllocated" node="harvester-node-0" score=4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeResourcesLeastAllocated" node="harvester-node-1" score=34</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeResourcesLeastAllocated" node="harvester-node-2" score=37</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodePreferAvoidPods" node="harvester-node-0" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodePreferAvoidPods" node="harvester-node-2" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodePreferAvoidPods" node="harvester-node-1" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="PodTopologySpread" node="harvester-node-0" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="PodTopologySpread" node="harvester-node-1" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="PodTopologySpread" node="harvester-node-2" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="TaintToleration" node="harvester-node-0" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="TaintToleration" node="harvester-node-1" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="TaintToleration" node="harvester-node-2" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeResourcesBalancedAllocation" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeResourcesBalancedAllocation" node="harvester-node-1" score=45</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" plugin="NodeResourcesBalancedAllocation" node="harvester-node-2" score=46</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" node="harvester-node-0" score=1000358</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" node="harvester-node-1" score=1000433</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm-without-overcommit-75q9b" node="harvester-node-2" score=1000437</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm-without-overcommit-75q9b", node "harvester-node-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm-without-overcommit-75q9b", node "harvester-node-2": all PVCs bound and nothing to do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Attempting to bind pod to node" pod="default/virt-launcher-vm-without-overcommit-75q9b" node="harvester-node-2"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></div></div></details><p><strong>Table 1 - kube-scheduler scores example</strong></p><table><thead><tr><th align="center"></th><th align="center">harvester-node-0</th><th align="center">harvester-node-1</th><th align="center">harvester-node-2</th></tr></thead><tbody><tr><td align="center">ImageLocality</td><td align="center">54</td><td align="center">54</td><td align="center">54</td></tr><tr><td align="center">InterPodAffinity</td><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">NodeResourcesLeastAllocated</td><td align="center">4</td><td align="center">34</td><td align="center">37</td></tr><tr><td align="center">NodeAffinity</td><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">NodePreferAvoidPods</td><td align="center">1000000</td><td align="center">1000000</td><td align="center">1000000</td></tr><tr><td align="center">PodTopologySpread</td><td align="center">200</td><td align="center">200</td><td align="center">200</td></tr><tr><td align="center">TaintToleration</td><td align="center">100</td><td align="center">100</td><td align="center">100</td></tr><tr><td align="center">NodeResourcesBalancedAllocation</td><td align="center">0</td><td align="center">45</td><td align="center">46</td></tr><tr><td align="center">Total</td><td align="center">1000358</td><td align="center">1000433</td><td align="center">1000437</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_mojV" id="why-vms-are-distributed-unevenly-with-overcommit">Why VMs are distributed unevenly with overcommit?<a class="hash-link" href="#why-vms-are-distributed-unevenly-with-overcommit" title="Direct link to heading">​</a></h2><p>With resources overcommit, Harvester modifies the resources request. By default, the <code>overcommit</code> configuration is <code>{"cpu": 1600, "memory": 150, "storage":  200}</code>. This means that if we request a VM with 1 CPU and 1G RAM, its <code>resources.requests.cpu</code> will become <code>62m</code>. </p><p>!!! note
The unit suffix <code>m</code> stands for "thousandth of a core."</p><p>To explain it, let's take the case of CPU overcommit. The default value of 1 CPU is equal to 1000m CPU, and with the default overcommit configuration of <code>"cpu": 1600</code>, the CPU resource will be 16x smaller. Here is the calculation: <code>1000m * 100 / 1600 = 62m</code>.</p><p>Now, we can see how overcommitting influences <code>kube-scheduler</code> scores.</p><p>In this example, we use a three nodes Harvester cluster with 6 cores and 16G RAM each. We will deploy two VMs with 1 CPU and 1G RAM, and we will compare the scores for both cases of "with-overcommit" and "without-overcommit" resources. </p><p>The results of both tables <em>Table 2</em> and <em>Table 3</em> can be explained as follow:</p><p>In the "with-overcommit" case, both VMs are deployed on <code>harvester-node-2</code>, however in the "without-overcommit" case, the VM1 is deployed on <code>harvester-node-2</code>, and VM2 is deployed on <code>harvester-node-1</code>. </p><p>If we look at the detailed scores, we'll see a variation of <code>Total Score</code> for <code>harvester-node-2</code> from <code>1000459</code> to <code>1000461</code> in the "with-overcommit" case, and <code>1000437</code> to <code>1000382</code> in the "without-overcommit case". It's because resources overcommit influences <code>request-cpu</code> and <code>request-memory</code>. </p><p>In the "with-overcommit" case, the <code>request-cpu</code> changes from <code>4412m</code> to <code>4474m</code>. The difference between the two numbers is <code>62m</code>, which is what we calculated above. However, in the "without-overcommit" case, we send <strong>real</strong> requests to <code>kube-scheduler</code>, so the <code>request-cpu</code> changes from <code>5350m</code> to <code>6350m</code>.</p><p>Finally, since most plugins give the same scores for each node except <code>NodeResourcesBalancedAllocation</code> and <code>NodeResourcesLeastAllocated</code>, we'll see a difference of these two scores for each node.</p><p>From the results, we can see the overcommit feature influences the final score of each Node, so VMs are distributed unevenly. Although the <code>harvester-node-2</code> score for VM 2 is higher than VM 1, it's not always increasing. In <em>Table 4</em>, we keep deploying VM with 1 CPU and 1G RAM, and we can see the score of <code>harvester-node-2</code> starts decreasing from 11th VM. The behavior of <code>kube-scheduler</code> depends on your cluster resources and the workload you deployed.</p><details class="details_lb9f alert alert--info details_BAp3" data-collapsed="true"><summary>kube-scheduler logs for vm1-with-overcommit</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-ljlmq -&gt; harvester-node-0: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9022 memory:14807289856] ,score 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-ljlmq -&gt; harvester-node-1: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4622 memory:5992960000] ,score 58,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-ljlmq -&gt; harvester-node-2: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4412 memory:5581918208] ,score 59,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-ljlmq -&gt; harvester-node-0: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9022 memory:14807289856] ,score 5,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-ljlmq -&gt; harvester-node-1: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4622 memory:5992960000] ,score 43,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-ljlmq -&gt; harvester-node-2: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4412 memory:5581918208] ,score 46,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="InterPodAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="InterPodAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="InterPodAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeResourcesLeastAllocated" node="harvester-node-0" score=5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeResourcesLeastAllocated" node="harvester-node-1" score=43</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeResourcesLeastAllocated" node="harvester-node-2" score=46</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodePreferAvoidPods" node="harvester-node-0" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodePreferAvoidPods" node="harvester-node-1" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodePreferAvoidPods" node="harvester-node-2" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="PodTopologySpread" node="harvester-node-0" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="PodTopologySpread" node="harvester-node-1" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="PodTopologySpread" node="harvester-node-2" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="TaintToleration" node="harvester-node-0" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="TaintToleration" node="harvester-node-1" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="TaintToleration" node="harvester-node-2" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeResourcesBalancedAllocation" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeResourcesBalancedAllocation" node="harvester-node-1" score=58</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="NodeResourcesBalancedAllocation" node="harvester-node-2" score=59</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="ImageLocality" node="harvester-node-0" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="ImageLocality" node="harvester-node-1" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" plugin="ImageLocality" node="harvester-node-2" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" node="harvester-node-0" score=1000359</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" node="harvester-node-1" score=1000455</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" node="harvester-node-2" score=1000459</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm1-with-overcommit-ljlmq", node "harvester-node-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm1-with-overcommit-ljlmq", node "harvester-node-2": all PVCs bound and nothing to do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Attempting to bind pod to node" pod="default/virt-launcher-vm1-with-overcommit-ljlmq" node="harvester-node-2"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></div></div></details><details class="details_lb9f alert alert--info details_BAp3" data-collapsed="true"><summary>kube-scheduler logs for vm2-with-overcommit</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-with-overcommit-pwrx4 -&gt; harvester-node-0: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9022 memory:14807289856] ,score 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-with-overcommit-pwrx4 -&gt; harvester-node-1: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4622 memory:5992960000] ,score 58,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-with-overcommit-pwrx4 -&gt; harvester-node-2: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4474 memory:6476701696] ,score 64,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-with-overcommit-pwrx4 -&gt; harvester-node-0: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9022 memory:14807289856] ,score 5,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-with-overcommit-pwrx4 -&gt; harvester-node-1: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4622 memory:5992960000] ,score 43,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-with-overcommit-pwrx4 -&gt; harvester-node-2: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:4474 memory:6476701696] ,score 43,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodePreferAvoidPods" node="harvester-node-0" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodePreferAvoidPods" node="harvester-node-1" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodePreferAvoidPods" node="harvester-node-2" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="PodTopologySpread" node="harvester-node-0" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="PodTopologySpread" node="harvester-node-1" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="PodTopologySpread" node="harvester-node-2" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="TaintToleration" node="harvester-node-0" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="TaintToleration" node="harvester-node-1" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="TaintToleration" node="harvester-node-2" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeResourcesBalancedAllocation" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeResourcesBalancedAllocation" node="harvester-node-1" score=58</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeResourcesBalancedAllocation" node="harvester-node-2" score=64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="ImageLocality" node="harvester-node-0" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="ImageLocality" node="harvester-node-1" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="ImageLocality" node="harvester-node-2" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="InterPodAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="InterPodAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="InterPodAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeResourcesLeastAllocated" node="harvester-node-0" score=5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeResourcesLeastAllocated" node="harvester-node-1" score=43</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" plugin="NodeResourcesLeastAllocated" node="harvester-node-2" score=43</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" node="harvester-node-0" score=1000359</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" node="harvester-node-1" score=1000455</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" node="harvester-node-2" score=1000461</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm2-with-overcommit-pwrx4", node "harvester-node-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm2-with-overcommit-pwrx4", node "harvester-node-2": all PVCs bound and nothing to do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Attempting to bind pod to node" pod="default/virt-launcher-vm2-with-overcommit-pwrx4" node="harvester-node-2"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></div></div></details><details class="details_lb9f alert alert--info details_BAp3" data-collapsed="true"><summary>kube-scheduler logs for vm1-without-overcommit</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-6xqmq -&gt; harvester-node-0: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9960 memory:15166603264] ,score 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-6xqmq -&gt; harvester-node-1: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5560 memory:6352273408] ,score 45,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-6xqmq -&gt; harvester-node-2: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5350 memory:5941231616] ,score 46,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-6xqmq -&gt; harvester-node-0: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9960 memory:15166603264] ,score 4,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-6xqmq -&gt; harvester-node-1: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5560 memory:6352273408] ,score 34,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm1-with-overcommit-6xqmq -&gt; harvester-node-2: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5350 memory:5941231616] ,score 37,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="InterPodAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="InterPodAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="InterPodAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeResourcesLeastAllocated" node="harvester-node-0" score=4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeResourcesLeastAllocated" node="harvester-node-1" score=34</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeResourcesLeastAllocated" node="harvester-node-2" score=37</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodePreferAvoidPods" node="harvester-node-0" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodePreferAvoidPods" node="harvester-node-1" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodePreferAvoidPods" node="harvester-node-2" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="PodTopologySpread" node="harvester-node-0" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="PodTopologySpread" node="harvester-node-1" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="PodTopologySpread" node="harvester-node-2" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="TaintToleration" node="harvester-node-0" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="TaintToleration" node="harvester-node-1" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="TaintToleration" node="harvester-node-2" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeResourcesBalancedAllocation" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeResourcesBalancedAllocation" node="harvester-node-1" score=45</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="NodeResourcesBalancedAllocation" node="harvester-node-2" score=46</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="ImageLocality" node="harvester-node-0" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="ImageLocality" node="harvester-node-1" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" plugin="ImageLocality" node="harvester-node-2" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" node="harvester-node-0" score=1000358</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" node="harvester-node-1" score=1000433</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" node="harvester-node-2" score=1000437</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm1-with-overcommit-6xqmq", node "harvester-node-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm1-with-overcommit-6xqmq", node "harvester-node-2": all PVCs bound and nothing to do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Attempting to bind pod to node" pod="default/virt-launcher-vm1-with-overcommit-6xqmq" node="harvester-node-2"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></div></div></details><details class="details_lb9f alert alert--info details_BAp3" data-collapsed="true"><summary>kube-scheduler logs for vm2-without-overcommit</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-without-overcommit-mf5vk -&gt; harvester-node-0: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9960 memory:15166603264] ,score 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-without-overcommit-mf5vk -&gt; harvester-node-1: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5560 memory:6352273408] ,score 45,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-without-overcommit-mf5vk -&gt; harvester-node-2: NodeResourcesBalancedAllocation, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:6350 memory:7195328512] ,score 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-without-overcommit-mf5vk -&gt; harvester-node-0: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:9960 memory:15166603264] ,score 4,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-without-overcommit-mf5vk -&gt; harvester-node-1: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:5560 memory:6352273408] ,score 34,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virt-launcher-vm2-without-overcommit-mf5vk -&gt; harvester-node-2: NodeResourcesLeastAllocated, map of allocatable resources map[cpu:6000 memory:16776437760], map of requested resources map[cpu:6350 memory:7195328512] ,score 28,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="PodTopologySpread" node="harvester-node-0" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="PodTopologySpread" node="harvester-node-1" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="PodTopologySpread" node="harvester-node-2" score=200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="TaintToleration" node="harvester-node-0" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="TaintToleration" node="harvester-node-1" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="TaintToleration" node="harvester-node-2" score=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeResourcesBalancedAllocation" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeResourcesBalancedAllocation" node="harvester-node-1" score=45</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeResourcesBalancedAllocation" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="ImageLocality" node="harvester-node-0" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="ImageLocality" node="harvester-node-1" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="ImageLocality" node="harvester-node-2" score=54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="InterPodAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="InterPodAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="InterPodAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeResourcesLeastAllocated" node="harvester-node-0" score=4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeResourcesLeastAllocated" node="harvester-node-1" score=34</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeResourcesLeastAllocated" node="harvester-node-2" score=28</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeAffinity" node="harvester-node-0" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeAffinity" node="harvester-node-1" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodeAffinity" node="harvester-node-2" score=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodePreferAvoidPods" node="harvester-node-0" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodePreferAvoidPods" node="harvester-node-1" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Plugin scored node for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" plugin="NodePreferAvoidPods" node="harvester-node-2" score=1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" node="harvester-node-0" score=1000358</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" node="harvester-node-1" score=1000433</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Calculated node's final score for pod" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" node="harvester-node-2" score=1000382</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm2-without-overcommit-mf5vk", node "harvester-node-1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AssumePodVolumes for pod "default/virt-launcher-vm2-without-overcommit-mf5vk", node "harvester-node-1": all PVCs bound and nothing to do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Attempting to bind pod to node" pod="default/virt-launcher-vm2-without-overcommit-mf5vk" node="harvester-node-1"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></div></div></details><p><strong>Table 2 - With Overcommit</strong></p><table><thead><tr><th align="center">VM 1 / VM 2</th><th align="right">harvester-node-0</th><th align="right">harvester-node-1</th><th align="right">harvester-node-2</th></tr></thead><tbody><tr><td align="center">request-cpu (m)</td><td align="right">9022 / 9022</td><td align="right">4622 / 4622</td><td align="right"><strong>4412</strong> / <strong>4474</strong></td></tr><tr><td align="center">request-memory</td><td align="right">14807289856 / 14807289856</td><td align="right">5992960000 / 5992960000</td><td align="right"><strong>5581918208</strong> / <strong>6476701696</strong></td></tr><tr><td align="center">NodeResourcesBalancedAllocation Score</td><td align="right">0 / 0</td><td align="right">58 / 58</td><td align="right"><strong>59</strong> / <strong>64</strong></td></tr><tr><td align="center">NodeResourcesLeastAllocated Score</td><td align="right">5 / 5</td><td align="right">43 / 43</td><td align="right"><strong>46</strong> / <strong>43</strong></td></tr><tr><td align="center">Other Scores</td><td align="right">1000354 / 1000354</td><td align="right">1000354 / 1000354</td><td align="right">1000354 / 1000354</td></tr><tr><td align="center">Total Score</td><td align="right">1000359 / 1000359</td><td align="right">1000455 / 1000455</td><td align="right"><strong>1000459</strong> / <strong>1000461</strong></td></tr></tbody></table><p><strong>Table 3 - Without Overcommit</strong></p><table><thead><tr><th align="center">VM 1 / VM 2</th><th align="right">harvester-node-0</th><th align="right">harvester-node-1</th><th align="right">harvester-node-2</th></tr></thead><tbody><tr><td align="center">request-cpu (m)</td><td align="right">9960 / 9960</td><td align="right">5560 / <strong>5560</strong></td><td align="right"><strong>5350</strong> / 6350</td></tr><tr><td align="center">request-memory</td><td align="right">15166603264 / 15166603264</td><td align="right">6352273408 / <strong>6352273408</strong></td><td align="right"><strong>5941231616</strong> / 7195328512</td></tr><tr><td align="center">NodeResourcesBalancedAllocation Score</td><td align="right">0 / 0</td><td align="right">45 / <strong>45</strong></td><td align="right"><strong>46</strong> / 0</td></tr><tr><td align="center">NodeResourcesLeastAllocated Score</td><td align="right">4 / 4</td><td align="right">34 / <strong>34</strong></td><td align="right"><strong>37</strong> / 28</td></tr><tr><td align="center">Other Scores</td><td align="right">1000354 / 1000354</td><td align="right">1000354 / <strong>1000354</strong></td><td align="right"><strong>1000354</strong> / 1000354</td></tr><tr><td align="center">Total Score</td><td align="right">1000358 / 1000358</td><td align="right">1000358 / <strong>1000433</strong></td><td align="right"><strong>1000437</strong> / 1000382</td></tr></tbody></table><p><strong>Table 4</strong></p><table><thead><tr><th align="center">Score</th><th align="right">harvester-node-0</th><th align="right">harvester-node-1</th><th align="right">harvester-node-2</th></tr></thead><tbody><tr><td align="center">VM 1</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000459</td></tr><tr><td align="center">VM 2</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000461</td></tr><tr><td align="center">VM 3</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000462</td></tr><tr><td align="center">VM 4</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000462</td></tr><tr><td align="center">VM 5</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000463</td></tr><tr><td align="center">VM 6</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000465</td></tr><tr><td align="center">VM 7</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000466</td></tr><tr><td align="center">VM 8</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000467</td></tr><tr><td align="center">VM 9</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000469</td></tr><tr><td align="center">VM 10</td><td align="right">1000359</td><td align="right">1000455</td><td align="right">1000469</td></tr><tr><td align="center">VM 11</td><td align="right">1000359</td><td align="right">1000455</td><td align="right"><strong>1000465</strong></td></tr><tr><td align="center">VM 12</td><td align="right">1000359</td><td align="right">1000455</td><td align="right"><strong>1000457</strong></td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-to-avoid-uneven-distribution-of-vms">How to avoid uneven distribution of VMs?<a class="hash-link" href="#how-to-avoid-uneven-distribution-of-vms" title="Direct link to heading">​</a></h2><p>There are many plugins in <code>kube-scheduler</code> which we can use to influence the scores. For example, we can add the <code>podAntiAffinity</code> plugin to avoid VMs with the same labels being deployed on the same node.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">  affinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    podAntiAffinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      preferredDuringSchedulingIgnoredDuringExecution:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - podAffinityTerm:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          labelSelector:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            matchExpressions:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            - key: harvesterhci.io/creator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              operator: Exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          topologyKey: kubernetes.io/hostname</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        weight: 100</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-to-see-scores-in-kube-scheduler">How to see scores in kube-scheduler?<a class="hash-link" href="#how-to-see-scores-in-kube-scheduler" title="Direct link to heading">​</a></h2><p><code>kube-scheduler</code> is deployed as a static pod in Harvester. The file is under <code>/var/lib/rancher/rke2/agent/pod-manifests/kube-scheduler.yaml</code> in each Management Node. We can add <code>- --v=10</code> to the <code>kube-scheduler</code> container to show score logs.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kind: Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  labels:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    component: kube-scheduler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tier: control-plane</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: kube-scheduler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  namespace: kube-system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  containers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - command:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    - kube-scheduler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    - --v=10</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>]]></content:encoded>
            <category>vm</category>
            <category>scheduling</category>
        </item>
    </channel>
</rss>